unbind C-b
set-option -g prefix C-Space

set-option -g base-index 1
set-option -g renumber-windows on
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"
set-option -g default-terminal "screen-256color"
set-option -g status-keys vi
set-option -g escape-time 0
set-option -g mouse

set-option -g pane-border-fg brightgreen
set-option -g pane-active-border-fg white

set-option -g status-left "[#{session_name}] "
set-option -g status-left-length 40
set-option -g status-right "%H:%M %G-%m-%d"
set-option -g status-position top
set-option -g status-bg black
set-option -g status-fg brightblue

set-option -g message-fg white
set-option -g message-bg blue

set-window-option -g mode-keys vi

set-window-option -g window-status-format " #{window_index}: #{window_name} "
set-window-option -g window-status-current-format " #{window_index}: #{window_name} "
set-window-option -g window-status-bg black
set-window-option -g window-status-fg brightblue
set-window-option -g window-status-current-bg brightgreen
set-window-option -g window-status-current-fg white

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "pbcopy"
bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "pbcopy"

bind-key -T prefix - split-window -v -c '#{pane_current_path}'
bind-key -T prefix \ split-window -h -c '#{pane_current_path}'
bind-key -T prefix r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key -T prefix K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

bind-key -T prefix h swap-window -t -
bind-key -T prefix l swap-window -t +

bind-key -T root S-Left resize-pane -L 1
bind-key -T root S-Right resize-pane -R 1
bind-key -T root S-Down resize-pane -D 1
bind-key -T root S-Up resize-pane -U 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -T root C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T root C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T root C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T root C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T root C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
